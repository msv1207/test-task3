version: '3.9'

services:

  nginx:
    build:
      context: ../
      dockerfile: docker/nginx/Dockerfile
    restart: unless-stopped
    working_dir: /application
    volumes:
      - ../:/application
      - ../docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${NGINX_PROXY_HTTP_PORT}:80
    networks:
      - backend


  php-fpm:
    build:
      context: ../
      dockerfile: docker/php-fpm/Dockerfile
    restart: unless-stopped
    working_dir: /application
    volumes:
      - ../:/application
      - ../docker/php-fpm/php-ini-overrides.ini:/etc/php/8.0/fpm/conf.d/99-overrides.ini
    networks:
      - backend
    links:
      - postgres
      - redis

  redis:
    image: redis:alpine
    restart: unless-stopped
    working_dir: /application
    volumes:
      - ./redis-data:/data
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - backend


  postgres:
    image: postgres:13.2
    working_dir: /application
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ../:/application
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - backend


  cron:
    build:
      context: ../
      dockerfile: docker/php_cron/Dockerfile
    working_dir: /application
    restart: unless-stopped
    volumes:
      - ../:/application
    networks:
      - backend
    links:
      - postgres
      - redis


  queue-worker:
    build:
      context: ../
      dockerfile: docker/php-fpm/Dockerfile
    restart: unless-stopped
    working_dir: /application
    volumes:
      - ../:/application
      - ../docker/php_cli/php-ini-overrides.ini:/etc/php/8.0/cli/conf.d/99-overrides.ini
    command: [ "php", "artisan", "queue:listen", "--delay=0", "--tries=3" ]
    networks:
      - backend
    links:
      - postgres
      - redis


networks:
  backend:
    name: ${COMPOSE_PROJECT_NAME}_network
    driver: bridge


volumes:
  postgres:
  redis:
